from dotenv import load_dotenv
import os
import requests

from dataclasses import dataclass

load_dotenv()

@dataclass
class EnvConfig:
    api_key = os.getenv('API_KEY')  # Weather API key

@dataclass
class RequestsConfig:
    BASE_URL =  'https://api.openweathermap.org/data/2.5/weather'

class WeatherFetcher:
    def __init__(self):
        self.api = EnvConfig()
        self.request_config = RequestsConfig()

    def send_request(self, city='karachi'):
        '''
        This function will send get request to url

        Parameters:
            city: which city the weahter data have to be fetched

        Returns:
            response from url
        '''
        try:
            request_url = f'{self.request_config.BASE_URL}?appid={self.api.api_key}&q={city}&units=metric'
            response = requests.get(request_url)
            
            if response.status_code == 200:
                return response
            else:
                print('Response not get', 'error code', response.status_code)
                return None
        except Exception as e:
            print(e)
            return None

    def fetch_json_from_response(self, city):
        '''
        This function will fetch the json data from the response generated by hitting get request

        Returns:
            json format data
        '''
        try:
            response = self.send_request(city=city)
            if response:
                return response.json()
            return None
        except Exception as e:
            print(e)
            return None

    def fetch_weather(self, city):
        '''
        This function will fetch the specific city weather data.

        Parameters:
            city: city name from which the weather data have to be fetched.

        Returns:
            weather information dictionary.
        '''
        try:
            data = self.fetch_json_from_response(city)
            if not data:
                return None

            weather_info = {
                'city': city.title(),
                'description': data['weather'][0]['description'],
                'icon': data['weather'][0]['icon'],
                'temperature': round(data['main']['temp'], 1),
                'humidity': data['main']['humidity'],
                'pressure': data['main']['pressure'],
                'wind_speed': round(data['wind']['speed'], 1)
            }
            return weather_info

        except Exception as e:
            print(f"Error fetching weather data: {e}")
            return None

if __name__ == '__main__':
    weather_fetcher = WeatherFetcher()
    weather_data = weather_fetcher.fetch_weather('saudi arabia')
    if weather_data:
        print(weather_data)